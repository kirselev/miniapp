{"ast":null,"code":"import _classCallCheck from \"/Users/kirill/on_hack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kirill/on_hack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kirill/on_hack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kirill/on_hack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kirill/on_hack/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kirill/on_hack/src/panels/SongSelector.js\";\nimport React from 'react';\nimport { Panel, PanelHeader, HeaderButton, Group, Button, Checkbox, FormLayout, Div, Select, platform, IOS } from '@vkontakte/vkui';\n\nvar SongSelector =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SongSelector, _React$Component);\n\n  function SongSelector() {\n    _classCallCheck(this, SongSelector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SongSelector).apply(this, arguments));\n  }\n\n  _createClass(SongSelector, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Select, {\n        placeholder: \"Select a song\",\n        value: this.props.songs.indexOf(this.props.selectedSong),\n        onChange: this.handleSongChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, this.renderSongOptions());\n    }\n  }, {\n    key: \"renderSongOptions\",\n    value: function renderSongOptions() {\n      return this.props.songs.map(function (song, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, song.title);\n      });\n    }\n  }, {\n    key: \"handleSongChange\",\n    value: function handleSongChange(ev) {\n      this.props.onSongSelected(this.props.songs[ev.target.value]);\n    }\n  }]);\n\n  return SongSelector;\n}(React.Component);\n\nexport { SongSelector as default };","map":{"version":3,"sources":["/Users/kirill/on_hack/src/panels/SongSelector.js"],"names":["React","Panel","PanelHeader","HeaderButton","Group","Button","Checkbox","FormLayout","Div","Select","platform","IOS","SongSelector","props","songs","indexOf","selectedSong","handleSongChange","bind","renderSongOptions","map","song","index","title","ev","onSongSelected","target","value","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,YAA5B,EAA0CC,KAA1C,EAAiDC,MAAjD,EAAyDC,QAAzD,EAAmEC,UAAnE,EAA+EC,GAA/E,EAAoFC,MAApF,EAA4FC,QAA5F,EAAsGC,GAAtG,QAAgH,iBAAhH;;IAEqBC,Y;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,eAApB;AAAoC,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyB,KAAKF,KAAL,CAAWG,YAApC,CAA3C;AAA8F,QAAA,QAAQ,EAAE,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,iBAAL,EADL,CADF;AAKD;;;wCAEmB;AAClB,aAAO,KAAKN,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3C,eACE;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACE,KADR,CADF;AAKD,OANM,CAAP;AAOD;;;qCAEgBC,E,EAAI;AACnB,WAAKX,KAAL,CAAWY,cAAX,CAA0B,KAAKZ,KAAL,CAAWC,KAAX,CAAiBU,EAAE,CAACE,MAAH,CAAUC,KAA3B,CAA1B;AACD;;;;EArBuC3B,KAAK,CAAC4B,S;;SAA3BhB,Y","sourcesContent":["import React from 'react';\nimport {Panel, PanelHeader, HeaderButton, Group, Button, Checkbox, FormLayout, Div, Select, platform, IOS} from '@vkontakte/vkui';\n\nexport default class SongSelector extends React.Component {\n  render() {\n    return (\n      <Select placeholder=\"Select a song\" value={this.props.songs.indexOf(this.props.selectedSong)} onChange={this.handleSongChange.bind(this)}>\n          {this.renderSongOptions()}\n      </Select>\n    );\n  }\n\n  renderSongOptions() {\n    return this.props.songs.map((song, index) => {\n      return (\n        <option key={index} value={index}>\n          {song.title}\n        </option>\n      );\n    });\n  }\n\n  handleSongChange(ev) {\n    this.props.onSongSelected(this.props.songs[ev.target.value]);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}